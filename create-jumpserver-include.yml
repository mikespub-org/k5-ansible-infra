---

#
# This is a unique instance creation so that we can run it 
#  more often ie. daily , and that it wont affect the actual
#  service
#

            - name: "Create the jump server"
            # autoip must be no - k5 doesnt allow it at build time
              os_server:
                name: "{{ jumpserver.name }}"
                state: present
                region_name: "{{ region.name }}"
                availability_zone: "{{ region.az }}"
                image: "{{ jumpserver.image }}"
                flavor: "{{ jumpserver.flavor }}"
                key_name: "{{ region.ssh_keypair }}"
                network: "{{ networks.0.name }}"
                security_groups: [ "default" ]
                volume_size: "{{ jumpserver.volume_size }}"
                boot_from_volume: yes
                terminate_volume: yes
                auto_ip: no
                meta:
                  group: "JumpServers" # this works
                  key_name: "{{ region.ssh_keypair }}" # this works
                  hostname: "{{ jumpserver.name }}.localdomain" # this does not work

            # but k5 does actually allow assignment of a floating (public) afterward initial creation
            - name: "Assign a floating IP"
              os_floating_ip:
                # https://docs.ansible.com/ansible/os_floating_ip_module.html
                # bug: https://github.com/ansible/ansible/issues/19620
                server: "{{ jumpserver.name }}"

            - name: "Get our jumpserver OpenStack facts"
              os_server_facts:
                # filter on just the jumpserver
                server: "{{ jumpserver.name }}"

            - name: "Show the jumpserver public IP"
              # dump facts json to screen - first item in the list
              debug: var=openstack_servers.0.public_v4


            #
            # now we have a running server, save the details to a local inventory for later use
            #
            - block:
              - name: "add to the running inventory the instance created above"
                add_host: 
                  hostname: "{{ jumpserver.name }}"
                  groupname: "jumpservers"

              - name: "Add the newly created instance to the local host group (located inside the directory)"
                local_action: lineinfile 
                  dest="./inventory/jumpservers" 
                  regexp="{{ jumpserver.name }}"
                  insertafter="[jumpservers]" 
                  line="{{ jumpserver.name }} ansible_host={{ openstack_servers.0.public_v4 }} ansible_user={{ jumpserver.ansible_user }} ansible_connection={{ jumpserver.ansible_connection }}"


              - name: "Wait for instance to listen on port 22"
                wait_for:
                  state: started
                  host: "{{ openstack_servers.0.public_v4 }}"
                  port: 22
                  delay: 10
                  search_regex: "OpenSSH"

              - debug: msg="**** jump server is LIVE and ready to use ****"

              when: openstack_servers.0.public_v4 is defined



